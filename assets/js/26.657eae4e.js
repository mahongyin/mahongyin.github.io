(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{505:function(t,s,e){"use strict";e.r(s);var a=e(2),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("大家都知道 c++ 兼容完整的 c，从理论上来讲 cin 和 cout 的速度应该远远大于 c 中 scanf 和 printf。")]),t._v(" "),e("p",[t._v("但是在真真做题的时候，当数据输入次数足够多的时候，用 cin/cout 的会超，而用 scanf/printf 则能过题，这是为什么？")]),t._v(" "),e("p",[t._v("在 codeforces 中会出现 TLE 的情况，并且官方题解通常也会带着这些宏：")]),t._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v("      PSB         push_back")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v("      ll          long long")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v("      FastIO      ios::sync_with_stdio(0);cin.tie(0); cout.tie(0);")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constexpr")]),t._v(" ll mod "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1e9")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ll N"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3e6")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[t._v("那么这里的 FastIO 是什么？有什么用？")]),t._v(" "),e("h2",{attrs:{id:"scanf-d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scanf-d"}},[t._v("#")]),t._v(' scanf("%d")')]),t._v(" "),e("p",[t._v("当然，全部转换为 scanf 和 printf 就会变快")]),t._v(" "),e("blockquote",[e("p",[t._v("For example scanf and printf are undoubtedly faster than cin and cout, but the later two are easier and faster to code. How should we adress this tradeoff?")])]),t._v(" "),e("p",[t._v("因为 Cpp 默认开启兼容 c 语言的模式，所以为了保证程序在使用了 std::printf 和 std::cout 的时候不发生混乱，将输出流绑到了一起。")]),t._v(" "),e("p",[t._v("Just include  "),e("code",[t._v("std::ios::sync_with_stdio(false);")]),t._v("  in your code, and cin will be as fast as scanf. （inside method main）")]),t._v(" "),e("h2",{attrs:{id:"sync-with-stdio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sync-with-stdio"}},[t._v("#")]),t._v(" sync_with_stdio")]),t._v(" "),e("p",[t._v("默认情况，cin 与 stdin 总是保持同步的，也就是说这两种方法可以混用，而不必担心文件指针混乱，同时 cout 和 stdout 也一样，两者混用不会输 出顺序错乱。正因为这个兼容性的特性，导致 cin 有许多额外的开销，如何禁用这个特性呢？只需一个语句  "),e("code",[t._v("std::ios::sync_with_stdio(false);")]),t._v(" ，这样就可以取消 cin 于 stdin 的同步了，此时的 cin 就与 scanf 差不多 了。")]),t._v(" "),e("blockquote",[e("p",[t._v("另一种解释： cout 在输出时总是要先将输出的存入缓存区。而 printf 直接调用系统进行 IO，它是非缓存的。所以 cout 比 printf 慢。")])]),t._v(" "),e("h2",{attrs:{id:"tie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tie"}},[t._v("#")]),t._v(" tie")]),t._v(" "),e("p",[t._v("tie 是 tuple 库中的一个函数， "),e("code",[t._v("std::tuple")]),t._v(" "),e("a",{attrs:{href:"https://blog.csdn.net/qq_37968132/article/details/82082731?spm=1001.2014.3001.5502",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++ tuple 的介绍及使用"),e("OutboundLink")],1),e("br"),t._v(" "),e("a",{attrs:{href:"https://blog.csdn.net/m0_37809890/article/details/89367406",target:"_blank",rel:"noopener noreferrer"}},[t._v(" std::tuple 和 std::tie 的用法简介"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("std::cin.tie (0) 或 std::cin.tie (NULL) 该函数取消 cin 和 cout 的绑定。")]),t._v(" "),e("p",[t._v("tie 是将两个 stream 绑定的函数，空参数的话返回当前的输出流指针。")]),t._v(" "),e("p",[t._v("所以为了加速输入输出："),e("br"),t._v("\n定义宏：")]),t._v(" "),e("p",[e("code",[t._v("#define FastIO ios::sync_with_stdio(0);cin.tie(0); cout.tie(0);")]),t._v(" "),e("br"),t._v("\nmain 函数中调用："),e("br"),t._v(" "),e("code",[t._v("FastIO")]),t._v("  即可")]),t._v(" "),e("h2",{attrs:{id:"getchar"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getchar"}},[t._v("#")]),t._v(" getchar")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/qq_34287501/article/details/70232038",target:"_blank",rel:"noopener noreferrer"}},[t._v("C/C++ 快速输入（输入挂)"),e("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);